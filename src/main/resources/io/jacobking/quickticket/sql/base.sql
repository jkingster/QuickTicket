CREATE TABLE IF NOT EXISTS SCHEMA_VERSION
(
    ID    INTEGER PRIMARY KEY,
    MAJOR INTEGER NOT NULL,
    MINOR INTEGER NOT NULL
);

INSERT INTO SCHEMA_VERSION (ID, MAJOR, MINOR)
VALUES (0, 1, 0);

CREATE TRIGGER IF NOT EXISTS SCHEMA_VERSION_NO_INSERT
    BEFORE INSERT
    ON SCHEMA_VERSION
    WHEN (SELECT COUNT(*)
          FROM SCHEMA_VERSION) >= 1
BEGIN
    SELECT RAISE(IGNORE) END;
END;

CREATE TABLE IF NOT EXISTS EMPLOYEE
(
    ID         INTEGER PRIMARY KEY AUTOINCREMENT,
    FIRST_NAME TEXT NOT NULL,
    LAST_NAME  TEXT NOT NULL,
    EMAIL      TEXT NOT NULL,
    TITLE      TEXT NOT NULL,
    DEPARTMENT TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS TICKET
(
    ID         INTEGER PRIMARY KEY AUTOINCREMENT,
    TITLE      TEXT    NOT NULL,
    STATUS     TEXT    NOT NULL DEFAULT 'OPEN',
    PRIORITY   TEXT    NOT NULL DEFAULT 'LOW',
    CREATED_ON TEXT    NOT NULL,
    USER_ID    INTEGER NOT NULL REFERENCES EMPLOYEE (ID)
);

CREATE TABLE IF NOT EXISTS COMMENT
(
    ID        INTEGER PRIMARY KEY AUTOINCREMENT,
    TICKET_ID INTEGER NOT NULL REFERENCES TICKET (ID),
    POST      TEXT    NOT NULL,
    POSTED_ON TEXT    NOT NULL
);

CREATE TABLE IF NOT EXISTS EMAIL
(
    ID              INTEGER PRIMARY KEY AUTOINCREMENT,
    HOST            TEXT    NOT NULL,
    PORT            TEXT    NOT NULL,
    STARTTLS        BOOLEAN NOT NULL DEFAULT FALSE,
    OVER_SSL_OR_TLS BOOLEAN NOT NULL DEFAULT FALSE,
    AUTHENTICATION  BOOLEAN NOT NULL DEFAULT FALSE,
    USERNAME        TEXT    NOT NULL,
    PASSWORD        TEXT    NOT NULL,
    FROM_ADDRESS    TEXT    NOT NULL,
    BCC_ADDRESS     TEXT    NOT NULL
);

INSERT INTO EMAIL (ID, HOST, PORT, STARTTLS, OVER_SSL_OR_TLS, AUTHENTICATION, USERNAME, PASSWORD, FROM_ADDRESS,
                   BCC_ADDRESS)
VALUES (0, '', '', FALSE, FALSE, FALSE, '', '', '', '');

CREATE TRIGGER IF NOT EXISTS EMAIL_NO_INSERT
    BEFORE INSERT
    ON EMAIL
    WHEN (SELECT COUNT(*)
          FROM EMAIL) >= 1
BEGIN
    SELECT RAISE(IGNORE) END;
END;

